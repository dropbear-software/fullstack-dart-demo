# Created with package:mono_repo v6.2.1
name: Dart CI
on:
  push:
    branches:
      - main
      - master
  pull_request:
  schedule:
    - cron: "0 0 * * 0"
defaults:
  run:
    shell: bash
env:
  PUB_ENVIRONMENT: bot.github

jobs:
  job_001:
    name: mono_repo self validate
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v3
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;sdk:stable"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: dart-lang/setup-dart@v1.3
        with:
          sdk: stable
      - id: checkout
        uses: actions/checkout@v3.0.0
      - name: mono_repo self validate
        run: dart pub global activate mono_repo 6.2.1
      - name: mono_repo self validate
        run: dart pub global run mono_repo generate --validate
  job_002:
    name: "smoke_test; Dart beta; PKGS: api, pkg/dropbear, server; `dart format --output=none --set-exit-if-changed .`, `dart analyze --fatal-infos .`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v3
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;sdk:beta;packages:api-pkg/dropbear-server;commands:format-analyze_0"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;sdk:beta;packages:api-pkg/dropbear-server
            os:ubuntu-latest;pub-cache-hosted;sdk:beta
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: dart-lang/setup-dart@v1.3
        with:
          sdk: beta
      - id: checkout
        uses: actions/checkout@v3.0.0
      - id: api_pub_upgrade
        name: api; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: api
        run: dart pub upgrade
      - name: "api; dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.api_pub_upgrade.conclusion == 'success'"
        working-directory: api
        run: "dart format --output=none --set-exit-if-changed ."
      - name: "api; dart analyze --fatal-infos ."
        if: "always() && steps.api_pub_upgrade.conclusion == 'success'"
        working-directory: api
        run: dart analyze --fatal-infos .
      - id: pkg_dropbear_pub_upgrade
        name: pkg/dropbear; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: pkg/dropbear
        run: dart pub upgrade
      - name: "pkg/dropbear; dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.pkg_dropbear_pub_upgrade.conclusion == 'success'"
        working-directory: pkg/dropbear
        run: "dart format --output=none --set-exit-if-changed ."
      - name: "pkg/dropbear; dart analyze --fatal-infos ."
        if: "always() && steps.pkg_dropbear_pub_upgrade.conclusion == 'success'"
        working-directory: pkg/dropbear
        run: dart analyze --fatal-infos .
      - id: server_pub_upgrade
        name: server; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: server
        run: dart pub upgrade
      - name: "server; dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.server_pub_upgrade.conclusion == 'success'"
        working-directory: server
        run: "dart format --output=none --set-exit-if-changed ."
      - name: "server; dart analyze --fatal-infos ."
        if: "always() && steps.server_pub_upgrade.conclusion == 'success'"
        working-directory: server
        run: dart analyze --fatal-infos .
  job_003:
    name: "smoke_test; Flutter beta; PKG: application; `dart format --output=none --set-exit-if-changed .`, `flutter analyze --fatal-infos .`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v3
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;sdk:beta;packages:application;commands:format-analyze_1"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;sdk:beta;packages:application
            os:ubuntu-latest;pub-cache-hosted;sdk:beta
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: subosito/flutter-action@v2.3.0
        with:
          channel: beta
      - id: checkout
        uses: actions/checkout@v3.0.0
      - id: application_pub_upgrade
        name: application; flutter pub pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: application
        run: flutter pub pub upgrade
      - name: "application; dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.application_pub_upgrade.conclusion == 'success'"
        working-directory: application
        run: "dart format --output=none --set-exit-if-changed ."
      - name: "application; flutter analyze --fatal-infos ."
        if: "always() && steps.application_pub_upgrade.conclusion == 'success'"
        working-directory: application
        run: flutter analyze --fatal-infos .
  job_004:
    name: "smoke_test; Flutter master; PKG: application; `dart format --output=none --set-exit-if-changed .`, `flutter analyze --fatal-infos .`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v3
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;sdk:master;packages:application;commands:format-analyze_1"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;sdk:master;packages:application
            os:ubuntu-latest;pub-cache-hosted;sdk:master
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: subosito/flutter-action@v2.3.0
        with:
          channel: master
      - id: checkout
        uses: actions/checkout@v3.0.0
      - id: application_pub_upgrade
        name: application; flutter pub pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: application
        run: flutter pub pub upgrade
      - name: "application; dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.application_pub_upgrade.conclusion == 'success'"
        working-directory: application
        run: "dart format --output=none --set-exit-if-changed ."
      - name: "application; flutter analyze --fatal-infos ."
        if: "always() && steps.application_pub_upgrade.conclusion == 'success'"
        working-directory: application
        run: flutter analyze --fatal-infos .
  job_005:
    name: "smoke_test; Dart stable; PKGS: api, pkg/dropbear, server; `dart format --output=none --set-exit-if-changed .`, `dart analyze --fatal-infos .`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v3
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;sdk:stable;packages:api-pkg/dropbear-server;commands:format-analyze_0"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;sdk:stable;packages:api-pkg/dropbear-server
            os:ubuntu-latest;pub-cache-hosted;sdk:stable
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: dart-lang/setup-dart@v1.3
        with:
          sdk: stable
      - id: checkout
        uses: actions/checkout@v3.0.0
      - id: api_pub_upgrade
        name: api; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: api
        run: dart pub upgrade
      - name: "api; dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.api_pub_upgrade.conclusion == 'success'"
        working-directory: api
        run: "dart format --output=none --set-exit-if-changed ."
      - name: "api; dart analyze --fatal-infos ."
        if: "always() && steps.api_pub_upgrade.conclusion == 'success'"
        working-directory: api
        run: dart analyze --fatal-infos .
      - id: pkg_dropbear_pub_upgrade
        name: pkg/dropbear; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: pkg/dropbear
        run: dart pub upgrade
      - name: "pkg/dropbear; dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.pkg_dropbear_pub_upgrade.conclusion == 'success'"
        working-directory: pkg/dropbear
        run: "dart format --output=none --set-exit-if-changed ."
      - name: "pkg/dropbear; dart analyze --fatal-infos ."
        if: "always() && steps.pkg_dropbear_pub_upgrade.conclusion == 'success'"
        working-directory: pkg/dropbear
        run: dart analyze --fatal-infos .
      - id: server_pub_upgrade
        name: server; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: server
        run: dart pub upgrade
      - name: "server; dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.server_pub_upgrade.conclusion == 'success'"
        working-directory: server
        run: "dart format --output=none --set-exit-if-changed ."
      - name: "server; dart analyze --fatal-infos ."
        if: "always() && steps.server_pub_upgrade.conclusion == 'success'"
        working-directory: server
        run: dart analyze --fatal-infos .
  job_006:
    name: "smoke_test; Flutter stable; PKG: application; `dart format --output=none --set-exit-if-changed .`, `flutter analyze --fatal-infos .`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v3
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;sdk:stable;packages:application;commands:format-analyze_1"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;sdk:stable;packages:application
            os:ubuntu-latest;pub-cache-hosted;sdk:stable
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: subosito/flutter-action@v2.3.0
        with:
          channel: stable
      - id: checkout
        uses: actions/checkout@v3.0.0
      - id: application_pub_upgrade
        name: application; flutter pub pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: application
        run: flutter pub pub upgrade
      - name: "application; dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.application_pub_upgrade.conclusion == 'success'"
        working-directory: application
        run: "dart format --output=none --set-exit-if-changed ."
      - name: "application; flutter analyze --fatal-infos ."
        if: "always() && steps.application_pub_upgrade.conclusion == 'success'"
        working-directory: application
        run: flutter analyze --fatal-infos .
  job_007:
    name: "test; Dart beta; PKG: api; `dart test --test-randomize-ordering-seed=random`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v3
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;sdk:beta;packages:api;commands:test_0"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;sdk:beta;packages:api
            os:ubuntu-latest;pub-cache-hosted;sdk:beta
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: dart-lang/setup-dart@v1.3
        with:
          sdk: beta
      - id: checkout
        uses: actions/checkout@v3.0.0
      - id: api_pub_upgrade
        name: api; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: api
        run: dart pub upgrade
      - name: "api; dart test --test-randomize-ordering-seed=random"
        if: "always() && steps.api_pub_upgrade.conclusion == 'success'"
        working-directory: api
        run: "dart test --test-randomize-ordering-seed=random"
    needs:
      - job_001
      - job_002
      - job_003
      - job_004
      - job_005
      - job_006
  job_008:
    name: "test; Dart beta; PKG: pkg/dropbear; `dart test --test-randomize-ordering-seed=random`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v3
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;sdk:beta;packages:pkg/dropbear;commands:test_0"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;sdk:beta;packages:pkg/dropbear
            os:ubuntu-latest;pub-cache-hosted;sdk:beta
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: dart-lang/setup-dart@v1.3
        with:
          sdk: beta
      - id: checkout
        uses: actions/checkout@v3.0.0
      - id: pkg_dropbear_pub_upgrade
        name: pkg/dropbear; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: pkg/dropbear
        run: dart pub upgrade
      - name: "pkg/dropbear; dart test --test-randomize-ordering-seed=random"
        if: "always() && steps.pkg_dropbear_pub_upgrade.conclusion == 'success'"
        working-directory: pkg/dropbear
        run: "dart test --test-randomize-ordering-seed=random"
    needs:
      - job_001
      - job_002
      - job_003
      - job_004
      - job_005
      - job_006
  job_009:
    name: "test; Dart beta; PKG: server; `dart test --test-randomize-ordering-seed=random`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v3
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;sdk:beta;packages:server;commands:test_0"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;sdk:beta;packages:server
            os:ubuntu-latest;pub-cache-hosted;sdk:beta
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: dart-lang/setup-dart@v1.3
        with:
          sdk: beta
      - id: checkout
        uses: actions/checkout@v3.0.0
      - id: server_pub_upgrade
        name: server; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: server
        run: dart pub upgrade
      - name: "server; dart test --test-randomize-ordering-seed=random"
        if: "always() && steps.server_pub_upgrade.conclusion == 'success'"
        working-directory: server
        run: "dart test --test-randomize-ordering-seed=random"
    needs:
      - job_001
      - job_002
      - job_003
      - job_004
      - job_005
      - job_006
  job_010:
    name: "test; Flutter beta; PKG: application; `flutter test --test-randomize-ordering-seed=random`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v3
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;sdk:beta;packages:application;commands:test_1"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;sdk:beta;packages:application
            os:ubuntu-latest;pub-cache-hosted;sdk:beta
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: subosito/flutter-action@v2.3.0
        with:
          channel: beta
      - id: checkout
        uses: actions/checkout@v3.0.0
      - id: application_pub_upgrade
        name: application; flutter pub pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: application
        run: flutter pub pub upgrade
      - name: "application; flutter test --test-randomize-ordering-seed=random"
        if: "always() && steps.application_pub_upgrade.conclusion == 'success'"
        working-directory: application
        run: "flutter test --test-randomize-ordering-seed=random"
    needs:
      - job_001
      - job_002
      - job_003
      - job_004
      - job_005
      - job_006
  job_011:
    name: "test; Dart stable; PKG: api; `dart test --test-randomize-ordering-seed=random`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v3
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;sdk:stable;packages:api;commands:test_0"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;sdk:stable;packages:api
            os:ubuntu-latest;pub-cache-hosted;sdk:stable
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: dart-lang/setup-dart@v1.3
        with:
          sdk: stable
      - id: checkout
        uses: actions/checkout@v3.0.0
      - id: api_pub_upgrade
        name: api; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: api
        run: dart pub upgrade
      - name: "api; dart test --test-randomize-ordering-seed=random"
        if: "always() && steps.api_pub_upgrade.conclusion == 'success'"
        working-directory: api
        run: "dart test --test-randomize-ordering-seed=random"
    needs:
      - job_001
      - job_002
      - job_003
      - job_004
      - job_005
      - job_006
  job_012:
    name: "test; Dart stable; PKG: pkg/dropbear; `dart test --test-randomize-ordering-seed=random`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v3
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;sdk:stable;packages:pkg/dropbear;commands:test_0"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;sdk:stable;packages:pkg/dropbear
            os:ubuntu-latest;pub-cache-hosted;sdk:stable
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: dart-lang/setup-dart@v1.3
        with:
          sdk: stable
      - id: checkout
        uses: actions/checkout@v3.0.0
      - id: pkg_dropbear_pub_upgrade
        name: pkg/dropbear; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: pkg/dropbear
        run: dart pub upgrade
      - name: "pkg/dropbear; dart test --test-randomize-ordering-seed=random"
        if: "always() && steps.pkg_dropbear_pub_upgrade.conclusion == 'success'"
        working-directory: pkg/dropbear
        run: "dart test --test-randomize-ordering-seed=random"
    needs:
      - job_001
      - job_002
      - job_003
      - job_004
      - job_005
      - job_006
  job_013:
    name: "test; Dart stable; PKG: server; `dart test --test-randomize-ordering-seed=random`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v3
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;sdk:stable;packages:server;commands:test_0"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;sdk:stable;packages:server
            os:ubuntu-latest;pub-cache-hosted;sdk:stable
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: dart-lang/setup-dart@v1.3
        with:
          sdk: stable
      - id: checkout
        uses: actions/checkout@v3.0.0
      - id: server_pub_upgrade
        name: server; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: server
        run: dart pub upgrade
      - name: "server; dart test --test-randomize-ordering-seed=random"
        if: "always() && steps.server_pub_upgrade.conclusion == 'success'"
        working-directory: server
        run: "dart test --test-randomize-ordering-seed=random"
    needs:
      - job_001
      - job_002
      - job_003
      - job_004
      - job_005
      - job_006
  job_014:
    name: "test; Flutter stable; PKG: application; `flutter test --test-randomize-ordering-seed=random`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v3
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;sdk:stable;packages:application;commands:test_1"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;sdk:stable;packages:application
            os:ubuntu-latest;pub-cache-hosted;sdk:stable
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: subosito/flutter-action@v2.3.0
        with:
          channel: stable
      - id: checkout
        uses: actions/checkout@v3.0.0
      - id: application_pub_upgrade
        name: application; flutter pub pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: application
        run: flutter pub pub upgrade
      - name: "application; flutter test --test-randomize-ordering-seed=random"
        if: "always() && steps.application_pub_upgrade.conclusion == 'success'"
        working-directory: application
        run: "flutter test --test-randomize-ordering-seed=random"
    needs:
      - job_001
      - job_002
      - job_003
      - job_004
      - job_005
      - job_006
