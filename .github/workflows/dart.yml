# Created with package:mono_repo v6.1.0
name: Dart CI
on:
  push:
    branches:
      - main
      - master
  pull_request:
  schedule:
    - cron: "0 0 * * 0"
defaults:
  run:
    shell: bash
env:
  PUB_ENVIRONMENT: bot.github

jobs:
  job_001:
    name: mono_repo self validate
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v2.1.7
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;sdk:stable"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: dart-lang/setup-dart@v1.3
        with:
          sdk: stable
      - id: checkout
        uses: actions/checkout@v3.0.0
      - name: mono_repo self validate
        run: dart pub global activate mono_repo 6.1.0
      - name: mono_repo self validate
        run: dart pub global run mono_repo generate --validate
  job_002:
    name: "analyze; PKGS: app, pkg/resource_identifier, pkg/todart_api, server; `dart analyze`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v2.1.7
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;sdk:stable;packages:app-pkg/resource_identifier-pkg/todart_api-server;commands:analyze"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;sdk:stable;packages:app-pkg/resource_identifier-pkg/todart_api-server
            os:ubuntu-latest;pub-cache-hosted;sdk:stable
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: subosito/flutter-action@v2.3.0
        with:
          channel: stable
      - id: checkout
        uses: actions/checkout@v3.0.0
      - id: app_pub_upgrade
        name: app; flutter pub pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: app
        run: flutter pub pub upgrade
      - name: app; dart analyze
        if: "always() && steps.app_pub_upgrade.conclusion == 'success'"
        working-directory: app
        run: dart analyze
      - id: pkg_resource_identifier_pub_upgrade
        name: pkg/resource_identifier; flutter pub pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: pkg/resource_identifier
        run: flutter pub pub upgrade
      - name: pkg/resource_identifier; dart analyze
        if: "always() && steps.pkg_resource_identifier_pub_upgrade.conclusion == 'success'"
        working-directory: pkg/resource_identifier
        run: dart analyze
      - id: pkg_todart_api_pub_upgrade
        name: pkg/todart_api; flutter pub pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: pkg/todart_api
        run: flutter pub pub upgrade
      - name: pkg/todart_api; dart analyze
        if: "always() && steps.pkg_todart_api_pub_upgrade.conclusion == 'success'"
        working-directory: pkg/todart_api
        run: dart analyze
      - id: server_pub_upgrade
        name: server; flutter pub pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: server
        run: flutter pub pub upgrade
      - name: server; dart analyze
        if: "always() && steps.server_pub_upgrade.conclusion == 'success'"
        working-directory: server
        run: dart analyze
  job_003:
    name: "analyze; PKGS: app, pkg/resource_identifier, pkg/todart_api, server; `dart format --output=none --set-exit-if-changed .`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v2.1.7
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;sdk:stable;packages:app-pkg/resource_identifier-pkg/todart_api-server;commands:format"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;sdk:stable;packages:app-pkg/resource_identifier-pkg/todart_api-server
            os:ubuntu-latest;pub-cache-hosted;sdk:stable
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: subosito/flutter-action@v2.3.0
        with:
          channel: stable
      - id: checkout
        uses: actions/checkout@v3.0.0
      - id: app_pub_upgrade
        name: app; flutter pub pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: app
        run: flutter pub pub upgrade
      - name: "app; dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.app_pub_upgrade.conclusion == 'success'"
        working-directory: app
        run: "dart format --output=none --set-exit-if-changed ."
      - id: pkg_resource_identifier_pub_upgrade
        name: pkg/resource_identifier; flutter pub pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: pkg/resource_identifier
        run: flutter pub pub upgrade
      - name: "pkg/resource_identifier; dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.pkg_resource_identifier_pub_upgrade.conclusion == 'success'"
        working-directory: pkg/resource_identifier
        run: "dart format --output=none --set-exit-if-changed ."
      - id: pkg_todart_api_pub_upgrade
        name: pkg/todart_api; flutter pub pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: pkg/todart_api
        run: flutter pub pub upgrade
      - name: "pkg/todart_api; dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.pkg_todart_api_pub_upgrade.conclusion == 'success'"
        working-directory: pkg/todart_api
        run: "dart format --output=none --set-exit-if-changed ."
      - id: server_pub_upgrade
        name: server; flutter pub pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: server
        run: flutter pub pub upgrade
      - name: "server; dart format --output=none --set-exit-if-changed ."
        if: "always() && steps.server_pub_upgrade.conclusion == 'success'"
        working-directory: server
        run: "dart format --output=none --set-exit-if-changed ."
  job_004:
    name: "unit_test; PKG: app; `flutter test`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v2.1.7
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;sdk:stable;packages:app;commands:test_0"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;sdk:stable;packages:app
            os:ubuntu-latest;pub-cache-hosted;sdk:stable
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: subosito/flutter-action@v2.3.0
        with:
          channel: stable
      - id: checkout
        uses: actions/checkout@v3.0.0
      - id: app_pub_upgrade
        name: app; flutter pub pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: app
        run: flutter pub pub upgrade
      - name: app; flutter test
        if: "always() && steps.app_pub_upgrade.conclusion == 'success'"
        working-directory: app
        run: flutter test
    needs:
      - job_001
      - job_002
      - job_003
  job_005:
    name: "unit_test; PKG: pkg/resource_identifier; `dart test`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v2.1.7
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;sdk:stable;packages:pkg/resource_identifier;commands:test_1"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;sdk:stable;packages:pkg/resource_identifier
            os:ubuntu-latest;pub-cache-hosted;sdk:stable
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: dart-lang/setup-dart@v1.3
        with:
          sdk: stable
      - id: checkout
        uses: actions/checkout@v3.0.0
      - id: pkg_resource_identifier_pub_upgrade
        name: pkg/resource_identifier; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: pkg/resource_identifier
        run: dart pub upgrade
      - name: pkg/resource_identifier; dart test
        if: "always() && steps.pkg_resource_identifier_pub_upgrade.conclusion == 'success'"
        working-directory: pkg/resource_identifier
        run: dart test
    needs:
      - job_001
      - job_002
      - job_003
  job_006:
    name: "unit_test; PKG: pkg/todart_api; `dart test`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v2.1.7
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;sdk:stable;packages:pkg/todart_api;commands:test_1"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;sdk:stable;packages:pkg/todart_api
            os:ubuntu-latest;pub-cache-hosted;sdk:stable
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: dart-lang/setup-dart@v1.3
        with:
          sdk: stable
      - id: checkout
        uses: actions/checkout@v3.0.0
      - id: pkg_todart_api_pub_upgrade
        name: pkg/todart_api; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: pkg/todart_api
        run: dart pub upgrade
      - name: pkg/todart_api; dart test
        if: "always() && steps.pkg_todart_api_pub_upgrade.conclusion == 'success'"
        working-directory: pkg/todart_api
        run: dart test
    needs:
      - job_001
      - job_002
      - job_003
  job_007:
    name: "unit_test; PKG: server; `dart test`"
    runs-on: ubuntu-latest
    steps:
      - name: Cache Pub hosted dependencies
        uses: actions/cache@v2.1.7
        with:
          path: "~/.pub-cache/hosted"
          key: "os:ubuntu-latest;pub-cache-hosted;sdk:stable;packages:server;commands:test_1"
          restore-keys: |
            os:ubuntu-latest;pub-cache-hosted;sdk:stable;packages:server
            os:ubuntu-latest;pub-cache-hosted;sdk:stable
            os:ubuntu-latest;pub-cache-hosted
            os:ubuntu-latest
      - uses: dart-lang/setup-dart@v1.3
        with:
          sdk: stable
      - id: checkout
        uses: actions/checkout@v3.0.0
      - id: server_pub_upgrade
        name: server; dart pub upgrade
        if: "always() && steps.checkout.conclusion == 'success'"
        working-directory: server
        run: dart pub upgrade
      - name: server; dart test
        if: "always() && steps.server_pub_upgrade.conclusion == 'success'"
        working-directory: server
        run: dart test
    needs:
      - job_001
      - job_002
      - job_003
